Видево : https://www.youtube.com/watch?v=y2emL1fMRyY
Вначале в проект нужно установить jest - это и есть система, которая позволит тестировать
npm i -D jest
Прописываем в файле scripts - test: "jest"
теперь при вводе команды npm run test - буду запускаться все скрипты
validateValues
  /*Чтобы запустить все тесты - напиши npm run test*/
  /*Если нужно запустить конкретный тест, значит пропиши название этого файла после слова test*/
  /*Чтобы запустить сразу несколько однотипных тестов  - можно воспользоваться обёрткой describe*/

mapArrToString
  /*т.к. объекты и массивы сравниваются по ссылке, а не по значению, то нужно использовать вместо toBe - toEqual В таком случае сравниваться будет значение  */
  /*Иногда можно использовать логическое отрицание */
  /*более подробно можно посмотреть на сайте jestjs.io*/

square
  /*Внутри describe можно использовать преколбэки, которые будут запускаться перед каждым тестированием
  Они указываются в блоке beforeEach, или beforeAll - будет вызванна единожды перед запуском всех тестов*/
  /*Точно также работают afterEach и afterALl - только срабатывают после тестов.*/
  //Запускается единожды, перед всеми тестами
  //запускается перед каждым тестом
  /*можно использовать различные логические операторы not,lessThan, greaterThan, toBeUndefined*/
  /*Можно проверить - сколько раз в тестируемом модуле вызывается конкретная функция.
  Для этого нужно использовать метод toBeCalledTimes(имя функции)(более подробно смотри в документации),
  но перед этим нужно указать переменную для слежки за отслеживаемой функцией*/
  const spyMyBomj = jest.spyOn(Math, "pow")//Первый аргумент модуль, который вызывает отслеживаемый метод, второй аргумент - сам метод
  square(2);//Теперь мы вызываем тестируемый модуль в котором будем считать сколько раз вызовется искомый метод
  expect (spyMyBomj).toBeCalledTimes(1);//square должна вызвать метод pow ровно один раз
  square(1);//Если не прописать в afterEach метод сброса подсчёта для spyMyBomj, то прописанный мок (spyMyBomj) будут накапливать вызовы pow, сколько бы раз ты не вызвал в тесторовании эту фнукцию - столько раз и будет в spymybomj
  expect (spyMyBomj).toBeCalledTimes(0);//поэтому в forEach мы пишем метод для сброса этих моков, чтобы после каждого теста он обнулялся.
  jest.clearAllMocks();//Это метод для сброса счётчиков в каждом моке(как например в spyMybBomj)

delay
  //т.к.delay функция асинхронная, то это нужно указать в тесте.
  test( 'delay test', async ()=>{
  
